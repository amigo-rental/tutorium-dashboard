import { PrismaClient } from "@prisma/client";

import { hashPassword } from "../lib/auth/jwt";

const prisma = new PrismaClient();

async function main() {
  console.log("üå± Starting database seed...");

  // Create users with hashed passwords
  const hashedPassword = await hashPassword("password123");

  // Create admin user
  const admin = await prisma.user.upsert({
    where: { email: "admin@tutorium.com" },
    update: {},
    create: {
      email: "admin@tutorium.com",
      name: "–ê–¥–º–∏–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
      password: hashedPassword,
      role: "ADMIN",
      avatar: "–ê–ê",
    },
  });

  console.log("‚úÖ Admin created:", admin.email);

  // Create multiple teacher users
  const teachers = await Promise.all([
    prisma.user.upsert({
      where: { email: "teacher@tutorium.com" },
      update: {},
      create: {
        email: "teacher@tutorium.com",
        name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
        password: hashedPassword,
        role: "TEACHER",
        avatar: "–ê–ü",
      },
    }),
    prisma.user.upsert({
      where: { email: "maria.gonzalez@tutorium.com" },
      update: {},
      create: {
        email: "maria.gonzalez@tutorium.com",
        name: "–ú–∞—Ä–∏—è –ì–æ–Ω—Å–∞–ª–µ—Å",
        password: hashedPassword,
        role: "TEACHER",
        avatar: "–ú–ì",
      },
    }),
    prisma.user.upsert({
      where: { email: "carlos.lopez@tutorium.com" },
      update: {},
      create: {
        email: "carlos.lopez@tutorium.com",
        name: "–ö–∞—Ä–ª–æ—Å –õ–æ–ø–µ—Å",
        password: hashedPassword,
        role: "TEACHER",
        avatar: "–ö–õ",
      },
    }),
  ]);

  console.log("‚úÖ Teachers created:", teachers.length);

  // Create courses
  console.log("Creating courses...");
  const courses = await Promise.all([
    prisma.course.create({
      data: {
        name: "–ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ",
        description: "–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è",
        level: "A1",
        duration: 12,
        difficulty: "BEGINNER",
        category: "GROUP",
        tags: ["–±–∞–∑–æ–≤—ã–π", "–≥—Ä—É–ø–ø–∞", "—Å –Ω—É–ª—è"],
        isActive: true,
      },
    }),
    prisma.course.create({
      data: {
        name: "–ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2",
        description:
          "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –∫—É—Ä—Å –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –¥–æ –±–∞–∑–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è",
        level: "A2",
        duration: 16,
        difficulty: "BEGINNER",
        category: "INTENSIVE",
        tags: ["–∏–Ω—Ç–µ–Ω—Å–∏–≤", "—Å –Ω—É–ª—è", "–¥–æ A2"],
        isActive: true,
      },
    }),
    prisma.course.create({
      data: {
        name: "–ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ",
        description: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É —Å –Ω—É–ª—è",
        level: "A1",
        duration: 20,
        difficulty: "BEGINNER",
        category: "INDIVIDUAL",
        tags: ["–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ", "—Å –Ω—É–ª—è", "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ"],
        isActive: true,
      },
    }),
  ]);

  console.log("‚úÖ Courses created:", courses.length);

  // Create topics for all courses
  console.log("Creating topics...");

  // Create topics for "–ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ" course
  const groupCourseTopics = await Promise.all([
    // 1A: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è
    prisma.topic.create({
      data: {
        name: "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è",
        description: "–ò–∑—É—á–∞–µ–º –∏—Å–ø–∞–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç, –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è",
        order: 1,
        courseId: courses[0].id, // –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ
        isActive: true,
      },
    }),
    // 1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã
    prisma.topic.create({
      data: {
        name: "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã",
        description: "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100",
        order: 2,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 1C: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è
    prisma.topic.create({
      data: {
        name: "1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è",
        description: "–ì–ª–∞–≥–æ–ª—ã ser –∏ estar - –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
        order: 3,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 1D: –∞—Ä—Ç–∏–∫–ª—å, —Ä–æ–¥ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ
    prisma.topic.create({
      data: {
        name: "1D: –∞—Ä—Ç–∏–∫–ª—å, —Ä–æ–¥ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ",
        description:
          "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∞—Ä—Ç–∏–∫–ª–∏, —Ä–æ–¥ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö, –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ",
        order: 4,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 1E: –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–µ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ
    prisma.topic.create({
      data: {
        name: "1–ï: –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–µ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ",
        description:
          "–ü—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è: mi, tu, su, nuestro, vuestro, su",
        order: 5,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 1F: –≥–ª–∞–≥–æ–ª estar + —ç–º–æ—Ü–∏–∏
    prisma.topic.create({
      data: {
        name: "1F: –≥–ª–∞–≥–æ–ª estar + —ç–º–æ—Ü–∏–∏",
        description:
          "–ì–ª–∞–≥–æ–ª estar —Å –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —ç–º–æ—Ü–∏–π –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π",
        order: 6,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 1G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
    prisma.topic.create({
      data: {
        name: "1G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞",
        order: 7,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 1H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π
    prisma.topic.create({
      data: {
        name: "1H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –ø–µ—Ä–≤–æ–º—É –±–ª–æ–∫—É —Ç–µ–º",
        order: 8,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 2A: presente de indicativo - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã
    prisma.topic.create({
      data: {
        name: "2A: presente de indicativo - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã",
        description:
          "–ù–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –∏–∑—ä—è–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤",
        order: 9,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 2B: presente - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã
    prisma.topic.create({
      data: {
        name: "2B: presente - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã",
        description:
          "–ù–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤: ser, estar, tener, ir, hacer",
        order: 10,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 2C: –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏
    prisma.topic.create({
      data: {
        name: "2–°: –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏",
        order: 11,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 2D: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    prisma.topic.create({
      data: {
        name: "2D: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏",
        order: 12,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 2E: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    prisma.topic.create({
      data: {
        name: "2E: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        order: 13,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 2F: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    prisma.topic.create({
      data: {
        name: "2F: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        order: 14,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 2G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
    prisma.topic.create({
      data: {
        name: "2G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –≤—Ç–æ—Ä–æ–≥–æ –±–ª–æ–∫–∞",
        order: 15,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 2H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π
    prisma.topic.create({
      data: {
        name: "2H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –≤—Ç–æ—Ä–æ–º—É –±–ª–æ–∫—É —Ç–µ–º",
        order: 16,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 3A: ser, estar, tener, haber
    prisma.topic.create({
      data: {
        name: "3A: ser, estar, tener, haber",
        description: "–£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤ –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞",
        order: 17,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 3B: tener que, hay que
    prisma.topic.create({
      data: {
        name: "3B: tener que, hay que",
        description:
          "–ú–æ–¥–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        order: 18,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 3C: –≥–ª–∞–≥–æ–ª hay
    prisma.topic.create({
      data: {
        name: "3C: –≥–ª–∞–≥–æ–ª hay",
        description: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≥–æ–ª–∞ hay –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è",
        order: 19,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 3D: –Ω–∞—Ä–µ—á–∏—è –º–µ—Å—Ç–∞
    prisma.topic.create({
      data: {
        name: "3D: –Ω–∞—Ä–µ—á–∏—è –º–µ—Å—Ç–∞",
        description: "–ù–∞—Ä–µ—á–∏—è –º–µ—Å—Ç–∞: aqu√≠, all√≠, cerca, lejos, dentro, fuera",
        order: 20,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 3E: —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞
    prisma.topic.create({
      data: {
        name: "3E: —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞",
        description: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–µ—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑—É—á–µ–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞",
        order: 21,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 3F: –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è
    prisma.topic.create({
      data: {
        name: "3F: –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è",
        description:
          "–í–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è: qu√©, qui√©n, d√≥nde, cu√°ndo, c√≥mo, por qu√©",
        order: 22,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 3G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
    prisma.topic.create({
      data: {
        name: "3G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ –±–ª–æ–∫–∞",
        order: 23,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
    // 3H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π
    prisma.topic.create({
      data: {
        name: "3H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–§–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –≤—Å–µ–º—É –∫—É—Ä—Å—É",
        order: 24,
        courseId: courses[0].id,
        isActive: true,
      },
    }),
  ]);

  // Create the same topics for "–ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2" course
  const intensiveCourseTopics = await Promise.all([
    prisma.topic.create({
      data: {
        name: "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è",
        description: "–ò–∑—É—á–∞–µ–º –∏—Å–ø–∞–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç, –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è",
        order: 1,
        courseId: courses[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã",
        description: "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100",
        order: 2,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è",
        description: "–ì–ª–∞–≥–æ–ª—ã ser –∏ estar - –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
        order: 3,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1D: –∞—Ä—Ç–∏–∫–ª—å, —Ä–æ–¥ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ",
        description:
          "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∞—Ä—Ç–∏–∫–ª–∏, —Ä–æ–¥ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö, –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ",
        order: 4,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1–ï: –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–µ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ",
        description:
          "–ü—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è: mi, tu, su, nuestro, vuestro, su",
        order: 5,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1F: –≥–ª–∞–≥–æ–ª estar + —ç–º–æ—Ü–∏–∏",
        description:
          "–ì–ª–∞–≥–æ–ª estar —Å –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —ç–º–æ—Ü–∏–π –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π",
        order: 6,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞",
        order: 7,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –ø–µ—Ä–≤–æ–º—É –±–ª–æ–∫—É —Ç–µ–º",
        order: 8,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2A: presente de indicativo - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã",
        description:
          "–ù–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –∏–∑—ä—è–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤",
        order: 9,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2B: presente - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã",
        description:
          "–ù–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤: ser, estar, tener, ir, hacer",
        order: 10,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2–°: –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏",
        order: 11,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2D: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏",
        order: 12,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2E: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        order: 13,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2F: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        order: 14,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –≤—Ç–æ—Ä–æ–≥–æ –±–ª–æ–∫–∞",
        order: 15,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –≤—Ç–æ—Ä–æ–º—É –±–ª–æ–∫—É —Ç–µ–º",
        order: 16,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3A: ser, estar, tener, haber",
        description: "–£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤ –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞",
        order: 17,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3B: tener que, hay que",
        description:
          "–ú–æ–¥–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        order: 18,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3C: –≥–ª–∞–≥–æ–ª hay",
        description: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≥–æ–ª–∞ hay –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è",
        order: 19,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3D: –Ω–∞—Ä–µ—á–∏—è –º–µ—Å—Ç–∞",
        description: "–ù–∞—Ä–µ—á–∏—è –º–µ—Å—Ç–∞: aqu√≠, all√≠, cerca, lejos, dentro, fuera",
        order: 20,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3E: —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞",
        description: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–µ—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑—É—á–µ–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞",
        order: 21,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3F: –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è",
        description:
          "–í–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è: qu√©, qui√©n, d√≥nde, cu√°ndo, c√≥mo, por qu√©",
        order: 22,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ –±–ª–æ–∫–∞",
        order: 23,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–§–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –≤—Å–µ–º—É –∫—É—Ä—Å—É",
        order: 24,
        courseId: courses[1].id,
        isActive: true,
      },
    }),
  ]);

  // Create the same topics for "–ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ" course
  const individualCourseTopics = await Promise.all([
    prisma.topic.create({
      data: {
        name: "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è",
        description: "–ò–∑—É—á–∞–µ–º –∏—Å–ø–∞–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç, –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è",
        order: 1,
        courseId: courses[2].id, // –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã",
        description: "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100",
        order: 2,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è",
        description: "–ì–ª–∞–≥–æ–ª—ã ser –∏ estar - –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
        order: 3,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1D: –∞—Ä—Ç–∏–∫–ª—å, —Ä–æ–¥ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ",
        description:
          "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∞—Ä—Ç–∏–∫–ª–∏, —Ä–æ–¥ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö, –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ",
        order: 4,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1–ï: –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–µ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ",
        description:
          "–ü—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è: mi, tu, su, nuestro, vuestro, su",
        order: 5,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1F: –≥–ª–∞–≥–æ–ª estar + —ç–º–æ—Ü–∏–∏",
        description:
          "–ì–ª–∞–≥–æ–ª estar —Å –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —ç–º–æ—Ü–∏–π –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π",
        order: 6,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞",
        order: 7,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "1H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –ø–µ—Ä–≤–æ–º—É –±–ª–æ–∫—É —Ç–µ–º",
        order: 8,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2A: presente de indicativo - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã",
        description:
          "–ù–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –∏–∑—ä—è–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤",
        order: 9,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2B: presente - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã",
        description:
          "–ù–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤: ser, estar, tener, ir, hacer",
        order: 10,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2–°: –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏",
        order: 11,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2D: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏",
        order: 12,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2E: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        order: 13,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2F: –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        description: "–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
        order: 14,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –≤—Ç–æ—Ä–æ–≥–æ –±–ª–æ–∫–∞",
        order: 15,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "2H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –≤—Ç–æ—Ä–æ–º—É –±–ª–æ–∫—É —Ç–µ–º",
        order: 16,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3A: ser, estar, tener, haber",
        description: "–£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤ –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞",
        order: 17,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3B: tener que, hay que",
        description:
          "–ú–æ–¥–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        order: 18,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3C: –≥–ª–∞–≥–æ–ª hay",
        description: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≥–æ–ª–∞ hay –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è",
        order: 19,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3D: –Ω–∞—Ä–µ—á–∏—è –º–µ—Å—Ç–∞",
        description: "–ù–∞—Ä–µ—á–∏—è –º–µ—Å—Ç–∞: aqu√≠, all√≠, cerca, lejos, dentro, fuera",
        order: 20,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3E: —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞",
        description: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–µ—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑—É—á–µ–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞",
        order: 21,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3F: –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è",
        description:
          "–í–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è: qu√©, qui√©n, d√≥nde, cu√°ndo, c√≥mo, por qu√©",
        order: 22,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3G: –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ",
        description: "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ –±–ª–æ–∫–∞",
        order: 23,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
    prisma.topic.create({
      data: {
        name: "3H: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–§–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –≤—Å–µ–º—É –∫—É—Ä—Å—É",
        order: 24,
        courseId: courses[2].id,
        isActive: true,
      },
    }),
  ]);

  // Combine all topics for easier reference
  const allTopics = [
    ...groupCourseTopics,
    ...intensiveCourseTopics,
    ...individualCourseTopics,
  ];
  const topics = allTopics;

  console.log("‚úÖ Topics created:", topics.length);

  // Create groups
  console.log("Creating groups...");
  const groups = await Promise.all([
    // –ò–Ω—Ç–µ–Ω—Å–∏–≤ –≥—Ä—É–ø–ø—ã (–ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2)
    prisma.group.create({
      data: {
        name: "–ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925",
        description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É",
        level: "A2",
        maxStudents: 6,
        isActive: true,
        startDate: new Date("2025-01-10"),
        endDate: new Date("2025-04-25"),
        schedule: {
          days: ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ü—è—Ç–Ω–∏—Ü–∞"],
          time: "19:00-21:00",
        },
        meetingLink: "https://zoom.us/j/123456789",
        teacherId: teachers[0].id,
        courseId: courses[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        currentStudents: 4,
        totalLessons: 24,
        averageRating: 4.8,
      },
    }),
    prisma.group.create({
      data: {
        name: "–ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825",
        description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É",
        level: "A2",
        maxStudents: 6,
        isActive: true,
        startDate: new Date("2025-08-19"),
        endDate: new Date("2025-12-05"),
        schedule: {
          days: ["–í—Ç–æ—Ä–Ω–∏–∫", "–ß–µ—Ç–≤–µ—Ä–≥", "–°—É–±–±–æ—Ç–∞"],
          time: "18:00-20:00",
        },
        meetingLink: "https://zoom.us/j/987654321",
        teacherId: teachers[1].id,
        courseId: courses[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        currentStudents: 5,
        totalLessons: 24,
        averageRating: 4.7,
      },
    }),
    prisma.group.create({
      data: {
        name: "–ò–Ω—Ç–µ–Ω—Å–∏–≤ 12070725",
        description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É",
        level: "A2",
        maxStudents: 6,
        isActive: true,
        startDate: new Date("2025-07-12"),
        endDate: new Date("2025-10-25"),
        schedule: {
          days: ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ü—è—Ç–Ω–∏—Ü–∞"],
          time: "20:00-22:00",
        },
        meetingLink: "https://zoom.us/j/456789123",
        teacherId: teachers[2].id,
        courseId: courses[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        currentStudents: 3,
        totalLessons: 24,
        averageRating: 4.6,
      },
    }),
    prisma.group.create({
      data: {
        name: "–ò–Ω—Ç–µ–Ω—Å–∏–≤ 20300625",
        description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É",
        level: "A2",
        maxStudents: 6,
        isActive: true,
        startDate: new Date("2025-06-20"),
        endDate: new Date("2025-09-30"),
        schedule: {
          days: ["–í—Ç–æ—Ä–Ω–∏–∫", "–ß–µ—Ç–≤–µ—Ä–≥", "–°—É–±–±–æ—Ç–∞"],
          time: "17:00-19:00",
        },
        meetingLink: "https://zoom.us/j/789123456",
        teacherId: teachers[0].id,
        courseId: courses[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        currentStudents: 6,
        totalLessons: 24,
        averageRating: 4.9,
      },
    }),
    prisma.group.create({
      data: {
        name: "–ò–Ω—Ç–µ–Ω—Å–∏–≤ 11030525",
        description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É",
        level: "A2",
        maxStudents: 6,
        isActive: true,
        startDate: new Date("2025-05-11"),
        endDate: new Date("2025-08-20"),
        schedule: {
          days: ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ü—è—Ç–Ω–∏—Ü–∞"],
          time: "16:00-18:00",
        },
        meetingLink: "https://zoom.us/j/321654987",
        teacherId: teachers[1].id,
        courseId: courses[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        currentStudents: 4,
        totalLessons: 24,
        averageRating: 4.5,
      },
    }),
    prisma.group.create({
      data: {
        name: "–ò–Ω—Ç–µ–Ω—Å–∏–≤ 18120525",
        description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É",
        level: "A2",
        maxStudents: 6,
        isActive: true,
        startDate: new Date("2025-12-18"),
        endDate: new Date("2026-03-30"),
        schedule: {
          days: ["–í—Ç–æ—Ä–Ω–∏–∫", "–ß–µ—Ç–≤–µ—Ä–≥", "–°—É–±–±–æ—Ç–∞"],
          time: "19:00-21:00",
        },
        meetingLink: "https://zoom.us/j/147258369",
        teacherId: teachers[0].id,
        courseId: courses[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        currentStudents: 2,
        totalLessons: 24,
        averageRating: 4.4,
      },
    }),
    // –ì—Ä—É–ø–ø–∞ –≥—Ä—É–ø–ø—ã (–ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ)
    prisma.group.create({
      data: {
        name: "–ì—Ä—É–ø–ø–∞ 20020925",
        description: "–ì—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É —Å –Ω—É–ª—è",
        level: "A1",
        maxStudents: 8,
        isActive: true,
        startDate: new Date("2025-09-20"),
        endDate: new Date("2026-01-10"),
        schedule: {
          days: ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–°—Ä–µ–¥–∞"],
          time: "18:00-20:00",
        },
        meetingLink: "https://zoom.us/j/963852741",
        teacherId: teachers[2].id,
        courseId: courses[0].id, // –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ
        currentStudents: 6,
        totalLessons: 24,
        averageRating: 4.7,
      },
    }),
    prisma.group.create({
      data: {
        name: "–ì—Ä—É–ø–ø–∞ 10100925",
        description: "–ì—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É —Å –Ω—É–ª—è",
        level: "A1",
        maxStudents: 8,
        isActive: true,
        startDate: new Date("2025-09-10"),
        endDate: new Date("2025-12-30"),
        schedule: {
          days: ["–í—Ç–æ—Ä–Ω–∏–∫", "–ß–µ—Ç–≤–µ—Ä–≥"],
          time: "19:00-21:00",
        },
        meetingLink: "https://zoom.us/j/852963741",
        teacherId: teachers[1].id,
        courseId: courses[0].id, // –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ
        currentStudents: 7,
        totalLessons: 24,
        averageRating: 4.8,
      },
    }),
    prisma.group.create({
      data: {
        name: "–ì—Ä—É–ø–ø–∞ 10050825",
        description: "–ì—Ä—É–ø–ø–∞ –ø–æ –∏—Å–ø–∞–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É —Å –Ω—É–ª—è",
        level: "A1",
        maxStudents: 8,
        isActive: true,
        startDate: new Date("2025-08-10"),
        endDate: new Date("2025-11-25"),
        schedule: {
          days: ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–ß–µ—Ç–≤–µ—Ä–≥"],
          time: "17:00-19:00",
        },
        meetingLink: "https://zoom.us/j/741852963",
        teacherId: teachers[0].id,
        courseId: courses[0].id, // –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ
        currentStudents: 5,
        totalLessons: 24,
        averageRating: 4.6,
      },
    }),
  ]);

  console.log("‚úÖ Groups created:", groups.length);

  // Create students (now as Users with STUDENT role)
  const students = await Promise.all([
    prisma.user.upsert({
      where: { email: "elena.garcia@example.com" },
      update: {},
      create: {
        name: "–ï–ª–µ–Ω–∞ –ì–∞—Ä—Å–∏—è",
        email: "elena.garcia@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A2",
        avatar: "–ï–ì",
        groupId: groups[0].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925
      },
    }),
    prisma.user.upsert({
      where: { email: "mikhail.petrov@example.com" },
      update: {},
      create: {
        name: "–ú–∏—Ö–∞–∏–ª –ü–µ—Ç—Ä–æ–≤",
        email: "mikhail.petrov@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A2",
        avatar: "–ú–ü",
        groupId: groups[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825
      },
    }),
    prisma.user.upsert({
      where: { email: "anna.sidorova@example.com" },
      update: {},
      create: {
        name: "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞",
        email: "anna.sidorova@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A1",
        avatar: "–ê–°",
        groupId: groups[6].id, // –ì—Ä—É–ø–ø–∞ 20020925
      },
    }),
    prisma.user.upsert({
      where: { email: "dmitry.kozlov@example.com" },
      update: {},
      create: {
        name: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤",
        email: "dmitry.kozlov@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A2",
        avatar: "–î–ö",
        groupId: groups[4].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 20300625
      },
    }),
    prisma.user.upsert({
      where: { email: "maria.ivanova@example.com" },
      update: {},
      create: {
        name: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞",
        email: "maria.ivanova@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A2",
        avatar: "–ú–ò",
        groupId: groups[0].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925
      },
    }),
    prisma.user.upsert({
      where: { email: "alexander.smirnov@example.com" },
      update: {},
      create: {
        name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°–º–∏—Ä–Ω–æ–≤",
        email: "alexander.smirnov@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A1",
        avatar: "–ê–°",
        groupId: groups[7].id, // –ì—Ä—É–ø–ø–∞ 10100925
      },
    }),
    prisma.user.upsert({
      where: { email: "olga.volkova@example.com" },
      update: {},
      create: {
        name: "–û–ª—å–≥–∞ –í–æ–ª–∫–æ–≤–∞",
        email: "olga.volkova@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A2",
        avatar: "–û–í",
        groupId: groups[5].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 11030525
      },
    }),
    prisma.user.upsert({
      where: { email: "sergey.novikov@example.com" },
      update: {},
      create: {
        name: "–°–µ—Ä–≥–µ–π –ù–æ–≤–∏–∫–æ–≤",
        email: "sergey.novikov@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A2",
        avatar: "–°–ù",
        groupId: groups[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825
      },
    }),
    prisma.user.upsert({
      where: { email: "natalia.kuznetsova@example.com" },
      update: {},
      create: {
        name: "–ù–∞—Ç–∞–ª—å—è –ö—É–∑–Ω–µ—Ü–æ–≤–∞",
        email: "natalia.kuznetsova@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A1",
        avatar: "–ù–ö",
        groupId: groups[6].id, // –ì—Ä—É–ø–ø–∞ 20020925
      },
    }),
    prisma.user.upsert({
      where: { email: "vladimir.sokolov@example.com" },
      update: {},
      create: {
        name: "–í–ª–∞–¥–∏–º–∏—Ä –°–æ–∫–æ–ª–æ–≤",
        email: "vladimir.sokolov@example.com",
        password: hashedPassword,
        role: "STUDENT",
        level: "A2",
        avatar: "–í–°",
        groupId: groups[4].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 20300625
      },
    }),
  ]);

  console.log("‚úÖ Students created:", students.length);

  // Enroll students in courses
  console.log("Enrolling students in courses...");
  const enrollments = await Promise.all([
    // Elena Grigorieva - A2 course (via intensive group)
    prisma.user.update({
      where: { id: students[0].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[1].id }, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        },
      },
    }),
    // Maria Petrova - A2 course (via intensive group)
    prisma.user.update({
      where: { id: students[1].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[1].id }, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        },
      },
    }),
    // Anna Sidorova - A1 course (via group course)
    prisma.user.update({
      where: { id: students[2].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[0].id }, // –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ
        },
      },
    }),
    // Dmitry Kozlov - A2 course (via intensive group)
    prisma.user.update({
      where: { id: students[3].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[1].id }, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        },
      },
    }),
    // Maria Ivanova - A2 course (via intensive group)
    prisma.user.update({
      where: { id: students[4].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[1].id }, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        },
      },
    }),
    // Alexander Smirnov - A1 course (via group course)
    prisma.user.update({
      where: { id: students[5].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[0].id }, // –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ
        },
      },
    }),
    // Olga Volkova - A2 course (via intensive group)
    prisma.user.update({
      where: { id: students[6].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[1].id }, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        },
      },
    }),
    // Sergey Novikov - A2 course (via intensive group)
    prisma.user.update({
      where: { id: students[7].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[1].id }, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        },
      },
    }),
    // Natalia Kuznetsova - A1 course (via group course)
    prisma.user.update({
      where: { id: students[8].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[0].id }, // –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ
        },
      },
    }),
    // Vladimir Sokolov - A2 course (via intensive group)
    prisma.user.update({
      where: { id: students[9].id },
      data: {
        enrolledCourses: {
          connect: { id: courses[1].id }, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2
        },
      },
    }),
  ]);

  console.log("‚úÖ Course enrollments created:", enrollments.length);

  // Create upcoming lessons for different groups
  console.log("Creating upcoming lessons...");
  const upcomingLessons = await Promise.all([
    // A1 Morning Group - Upcoming lessons (synchronized with completed lessons)
    prisma.lesson.create({
      data: {
        title: "–ì–æ—Ä–æ–¥ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
        description: "–ò–∑—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—Ç –≤ –≥–æ—Ä–æ–¥–µ, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
        date: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // 2 days from now
        startTime: "10:00",
        endTime: "11:00",
        duration: 60,
        isActive: true,
        meetingLink: "https://zoom.us/j/123456789",
        notes: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –∫–∞—Ä—Ç–æ–π –≥–æ—Ä–æ–¥–∞",
        materials: [
          "https://example.com/city_vocabulary.pdf",
          "https://example.com/transport_audio.mp3",
        ],
        teacherId: teachers[0].id,
        groupId: groups[0].id, // A1 morning group
        topicId: topics[3].id, // "–ì–æ—Ä–æ–¥ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç" - matches nextTopicId from last completed lesson
        lessonType: "GROUP",
        status: "SCHEDULED",
      },
    }),
    prisma.lesson.create({
      data: {
        title: "–í—Ä–µ–º—è –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
        description:
          "–ò–∑—É—á–∞–µ–º –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—å –æ –≤—Ä–µ–º–µ–Ω–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á–∏",
        date: new Date(Date.now() + 9 * 24 * 60 * 60 * 1000), // 9 days from now
        startTime: "10:00",
        endTime: "11:00",
        duration: 60,
        isActive: true,
        meetingLink: "https://zoom.us/j/987654321",
        notes: "–°—Ç—É–¥–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–µ—Å—Ç–∏ —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
        materials: [
          "https://example.com/time_vocabulary.pdf",
          "https://example.com/schedule_exercises.pdf",
        ],
        teacherId: teachers[0].id,
        groupId: groups[0].id, // A1 morning group
        topicId: topics[4].id, // "–í—Ä–µ–º—è –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" - next topic after "–ì–æ—Ä–æ–¥ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç"
        lessonType: "GROUP",
        status: "SCHEDULED",
      },
    }),

    // A1 Evening Group - Upcoming lessons (synchronized with completed lessons)
    prisma.lesson.create({
      data: {
        title: "–°–µ–º—å—è –∏ –¥—Ä—É–∑—å—è",
        description:
          "–ò–∑—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —á–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏, –≥–ª–∞–≥–æ–ª 'tener' –∏ –ø—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è",
        date: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000), // 1 day from now
        startTime: "20:00",
        endTime: "21:00",
        duration: 60,
        isActive: true,
        meetingLink: "https://zoom.us/j/456789123",
        notes: "–ü—Ä–∞–∫—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è —Å –∞—É–¥–∏–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏",
        materials: [
          "https://example.com/family_vocabulary.pdf",
          "https://example.com/grammar_exercises.pdf",
        ],
        teacherId: teachers[0].id,
        groupId: groups[1].id, // A1 evening group
        topicId: topics[1].id, // "–°–µ–º—å—è –∏ –¥—Ä—É–∑—å—è" - matches nextTopicId from last completed lesson
        lessonType: "GROUP",
        status: "SCHEDULED",
      },
    }),

    // A2 Group - Upcoming lessons
    prisma.lesson.create({
      data: {
        title: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
        description: "–õ–µ–∫—Å–∏–∫–∞ –¥–ª—è –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞, –æ—Ç–µ–ª—è, –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–æ–≤",
        date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000), // 3 days from now
        startTime: "19:00",
        endTime: "20:00",
        duration: 60,
        isActive: true,
        meetingLink: "https://zoom.us/j/789123456",
        notes: "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥–∏ –¥–ª—è —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä",
        materials: [
          "https://example.com/travel_vocabulary.pdf",
          "https://example.com/dialogues.pdf",
        ],
        teacherId: teachers[0].id,
        groupId: groups[2].id, // A2 group
        topicId: topics[5].id, // "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"
        lessonType: "GROUP",
        status: "SCHEDULED",
      },
    }),

    // B1 Group - Upcoming lessons
    prisma.lesson.create({
      data: {
        title: "–î–µ–ª–æ–≤—ã–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã",
        description:
          "–§–æ—Ä–º–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è, –¥–µ–ª–æ–≤–∞—è –ª–µ–∫—Å–∏–∫–∞, –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤",
        date: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000), // 4 days from now
        startTime: "18:00",
        endTime: "19:00",
        duration: 60,
        isActive: true,
        meetingLink: "https://zoom.us/j/321654987",
        notes: "–°—Ç—É–¥–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é —Å–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏",
        materials: [
          "https://example.com/business_communication.pdf",
          "https://example.com/negotiation_skills.pdf",
        ],
        teacherId: teachers[1].id,
        groupId: groups[3].id, // B1 group
        topicId: topics[8].id, // "–î–µ–ª–æ–≤–∞—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"
        lessonType: "GROUP",
        status: "SCHEDULED",
      },
    }),

    // B2 Group - Upcoming lessons
    prisma.lesson.create({
      data: {
        title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ DELE B2 - –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞",
        description:
          "–°–ª–æ–∂–Ω—ã–µ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, Subjuntivo, —É—Å–ª–æ–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
        date: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000), // 6 days from now
        startTime: "15:00",
        endTime: "16:00",
        duration: 60,
        isActive: true,
        meetingLink: "https://zoom.us/j/654321789",
        notes: "–¢–µ—Å—Ç –ø–æ –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ –≤ –Ω–∞—á–∞–ª–µ —É—Ä–æ–∫–∞",
        materials: [
          "https://example.com/grammar_test.pdf",
          "https://example.com/subjuntivo_exercises.pdf",
        ],
        teacherId: teachers[1].id,
        groupId: groups[4].id, // B2 group
        topicId: topics[10].id, // "–°–ª–æ–∂–Ω–∞—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞"
        lessonType: "GROUP",
        status: "SCHEDULED",
      },
    }),

    // Individual lessons
    prisma.lesson.create({
      data: {
        title: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–µ—á–∏",
        description:
          "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–∫ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –±–µ–≥–ª–æ—Å—Ç–∏ —Ä–µ—á–∏ –∏ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è",
        date: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000), // 1 day from now
        startTime: "16:00",
        endTime: "17:00",
        duration: 60,
        isActive: true,
        meetingLink: "https://zoom.us/j/111222333",
        notes: "–§–æ–∫—É—Å –Ω–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–∏ –∏ –±–µ–≥–ª–æ—Å—Ç–∏ —Ä–µ—á–∏",
        materials: [
          "https://example.com/conversation_topics.pdf",
          "https://example.com/pronunciation_exercises.pdf",
        ],
        teacherId: teachers[0].id,
        groupId: null, // Individual lesson
        topicId: null, // No specific topic for individual lessons
        lessonType: "INDIVIDUAL",
        status: "SCHEDULED",
      },
    }),
  ]);

  console.log("‚úÖ Upcoming lessons created:", upcomingLessons.length);

  // Create sample attachments for lessons (now using lessonId instead of recordingId)
  const attachments = await Promise.all([
    // A1 Morning Group Attachments
    prisma.attachment.create({
      data: {
        filename: "a1_greetings_worksheet.pdf",
        originalName: "a1_greetings_worksheet.pdf",
        mimeType: "application/pdf",
        size: 512000,
        path: "/uploads/a1_greetings_worksheet.pdf",
        lessonId: upcomingLessons[0].id, // A1 lesson
      },
    }),
    prisma.attachment.create({
      data: {
        filename: "a1_family_vocabulary.pdf",
        originalName: "a1_family_vocabulary.pdf",
        mimeType: "application/pdf",
        size: 768000,
        path: "/uploads/a1_family_vocabulary.pdf",
        lessonId: upcomingLessons[1].id, // A1 lesson
      },
    }),

    // A2 Group Attachments
    prisma.attachment.create({
      data: {
        filename: "a2_travel_vocabulary.pdf",
        originalName: "a2_travel_vocabulary.pdf",
        mimeType: "application/pdf",
        size: 1024000,
        path: "/uploads/a2_travel_vocabulary.pdf",
        lessonId: upcomingLessons[3].id, // A2 lesson
      },
    }),
    prisma.attachment.create({
      data: {
        filename: "a2_past_tense_exercises.pdf",
        originalName: "a2_past_tense_exercises.pdf",
        mimeType: "application/pdf",
        size: 512000,
        path: "/uploads/a2_past_tense_exercises.pdf",
        lessonId: upcomingLessons[3].id, // A2 lesson
      },
    }),

    // B1 Group Attachments
    prisma.attachment.create({
      data: {
        filename: "b1_business_communication.pdf",
        originalName: "b1_business_communication.pdf",
        mimeType: "application/pdf",
        size: 1536000,
        path: "/uploads/b1_business_communication.pdf",
        lessonId: upcomingLessons[4].id, // B1 lesson
      },
    }),

    // B2 Group Attachments
    prisma.attachment.create({
      data: {
        filename: "b2_subjuntivo_exercises.pdf",
        originalName: "b2_subjuntivo_exercises.pdf",
        mimeType: "application/pdf",
        size: 1024000,
        path: "/uploads/b2_subjuntivo_exercises.pdf",
        lessonId: upcomingLessons[5].id, // B2 lesson
      },
    }),

    // C1 Group Attachments
    prisma.attachment.create({
      data: {
        filename: "c1_academic_writing.pdf",
        originalName: "c1_academic_writing.pdf",
        mimeType: "application/pdf",
        size: 2048000,
        path: "/uploads/c1_academic_writing.pdf",
        lessonId: upcomingLessons[6].id, // C1 lesson
      },
    }),
  ]);

  console.log("‚úÖ Attachments created:", attachments.length);

  // Create lesson feedback
  console.log("Creating lesson feedback...");
  const feedbacks = await Promise.all([
    prisma.lessonFeedback.create({
      data: {
        rating: 5,
        comment:
          "–û—Ç–ª–∏—á–Ω—ã–π —É—Ä–æ–∫! –í—Å–µ –ø–æ–Ω—è—Ç–Ω–æ –æ–±—ä—è—Å–Ω–∏–ª–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è.",
        isAnonymous: false,
        studentId: students[0].id, // Elena Garcia
        lessonId: upcomingLessons[0].id, // A1 lesson
      },
    }),
    prisma.lessonFeedback.create({
      data: {
        rating: 4,
        comment:
          "–•–æ—Ä–æ—à–∏–π —É—Ä–æ–∫, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –±–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–µ—á–∏.",
        isAnonymous: false,
        studentId: students[1].id, // Mikhail Petrov
        lessonId: upcomingLessons[3].id, // A2 lesson
      },
    }),
    prisma.lessonFeedback.create({
      data: {
        rating: 5,
        comment:
          "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É—Ä–æ–∫–∞ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏.",
        isAnonymous: true,
        studentId: students[2].id, // Anna Sidorova
        lessonId: upcomingLessons[1].id, // A1 lesson
      },
    }),
    prisma.lessonFeedback.create({
      data: {
        rating: 4,
        comment: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª, –Ω–æ —Ç–µ–º–ø –Ω–µ–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä—ã–π –¥–ª—è –º–µ–Ω—è.",
        isAnonymous: false,
        studentId: students[3].id, // Dmitry Kozlov
        lessonId: upcomingLessons[4].id, // B1 lesson
      },
    }),
    prisma.lessonFeedback.create({
      data: {
        rating: 5,
        comment:
          "–û—Ç–ª–∏—á–Ω—ã–π —É—Ä–æ–∫! –ú–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω—É.",
        isAnonymous: true,
        studentId: students[4].id, // Maria Ivanova
        lessonId: upcomingLessons[2].id, // A2 lesson
      },
    }),
    prisma.lessonFeedback.create({
      data: {
        rating: 5,
        comment:
          "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –æ–±—É—á–µ–Ω–∏—é. –û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω –∫–∞—á–µ—Å—Ç–≤–æ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞.",
        isAnonymous: false,
        studentId: students[6].id, // Olga Volkova
        lessonId: upcomingLessons[5].id, // C1 lesson
      },
    }),
  ]);

  console.log("‚úÖ Lesson feedback created:", feedbacks.length);

  // Create lesson attendance records
  console.log("Creating lesson attendance...");
  const attendanceRecords = await Promise.all([
    // A1 Morning Group Attendance
    prisma.lessonAttendance.create({
      data: {
        lessonId: upcomingLessons[0].id,
        studentId: students[2].id, // Anna Sidorova
        status: "PRESENT",
        notes: "–ê–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∞ –≤ —É—Ä–æ–∫–µ",
      },
    }),
    prisma.lessonAttendance.create({
      data: {
        lessonId: upcomingLessons[0].id,
        studentId: students[8].id, // Natalia Kuznetsova
        status: "PRESENT",
        notes: "–•–æ—Ä–æ—à–æ —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å —Å –∑–∞–¥–∞–Ω–∏—è–º–∏",
      },
    }),

    // A2 Group Attendance
    prisma.lessonAttendance.create({
      data: {
        lessonId: upcomingLessons[2].id,
        studentId: students[0].id, // Elena Garcia
        status: "PRESENT",
        notes: "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞ —É—Ä–æ–∫–µ",
      },
    }),
    prisma.lessonAttendance.create({
      data: {
        lessonId: upcomingLessons[2].id,
        studentId: students[4].id, // Maria Ivanova
        status: "LATE",
        notes: "–û–ø–æ–∑–¥–∞–ª–∞ –Ω–∞ 10 –º–∏–Ω—É—Ç",
      },
    }),

    // B1 Group Attendance
    prisma.lessonAttendance.create({
      data: {
        lessonId: upcomingLessons[4].id,
        studentId: students[1].id, // Mikhail Petrov
        status: "PRESENT",
        notes: "–ê–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –¥–∏—Å–∫—É—Å—Å–∏–∏",
      },
    }),
    prisma.lessonAttendance.create({
      data: {
        lessonId: upcomingLessons[4].id,
        studentId: students[7].id, // Sergey Novikov
        status: "ABSENT",
        notes: "–ü–æ —Å–µ–º–µ–π–Ω—ã–º –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º",
      },
    }),
  ]);

  console.log("‚úÖ Attendance records created:", attendanceRecords.length);

  // Create completed lessons with next topic information to demonstrate progress tracking
  console.log("Creating completed lessons with next topics...");
  const completedLessons = await Promise.all([
    // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925 - Completed lessons showing progress
    prisma.lesson.create({
      data: {
        title: "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è",
        description: "–ò–∑—É—á–∏–ª–∏ –∏—Å–ø–∞–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç, –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è",
        date: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000), // 14 days ago
        startTime: "19:00",
        endTime: "21:00",
        duration: 120,
        isActive: true,
        youtubeLink: "https://youtube.com/watch?v=abc123",
        transcript:
          "–ü–æ–ª–Ω–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É—Ä–æ–∫–∞ –ø–æ —Ç–µ–º–µ '1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è'",
        isPublished: true,
        viewCount: 45,
        averageRating: 4.8,
        totalFeedback: 6,
        teacherId: teachers[0].id,
        groupId: groups[0].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925
        topicId: topics[0].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è"
        nextTopicId: topics[1].id, // "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã" - next topic
        lessonType: "GROUP",
        status: "COMPLETED",
      },
    }),
    prisma.lesson.create({
      data: {
        title: "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã",
        description:
          "–ò–∑—É—á–∏–ª–∏ –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100",
        date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7 days ago
        startTime: "19:00",
        endTime: "21:00",
        duration: 120,
        isActive: true,
        youtubeLink: "https://youtube.com/watch?v=def456",
        transcript: "–ü–æ–ª–Ω–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É—Ä–æ–∫–∞ –ø–æ —Ç–µ–º–µ '1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã'",
        isPublished: true,
        viewCount: 38,
        averageRating: 4.9,
        totalFeedback: 6,
        teacherId: teachers[0].id,
        groupId: groups[0].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925
        topicId: topics[1].id, // "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã"
        nextTopicId: topics[2].id, // "1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è" - next topic
        lessonType: "GROUP",
        status: "COMPLETED",
      },
    }),
    prisma.lesson.create({
      data: {
        title: "1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è",
        description:
          "–ò–∑—É—á–∏–ª–∏ –≥–ª–∞–≥–æ–ª—ã ser –∏ estar - –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
        date: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // 3 days ago
        startTime: "19:00",
        endTime: "21:00",
        duration: 120,
        isActive: true,
        youtubeLink: "https://youtube.com/watch?v=ghi789",
        transcript:
          "–ü–æ–ª–Ω–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É—Ä–æ–∫–∞ –ø–æ —Ç–µ–º–µ '1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è'",
        isPublished: true,
        viewCount: 22,
        averageRating: 4.7,
        totalFeedback: 6,
        teacherId: teachers[0].id,
        groupId: groups[0].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925
        topicId: topics[2].id, // "1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è"
        nextTopicId: topics[3].id, // "1D: –∞—Ä—Ç–∏–∫–ª—å, —Ä–æ–¥ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ" - next topic
        lessonType: "GROUP",
        status: "COMPLETED",
      },
    }),

    // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825 - Completed lessons showing progress
    prisma.lesson.create({
      data: {
        title: "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è",
        description: "–ò–∑—É—á–∏–ª–∏ –∏—Å–ø–∞–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç, –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è",
        date: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000), // 10 days ago
        startTime: "18:00",
        endTime: "20:00",
        duration: 120,
        isActive: true,
        youtubeLink: "https://youtube.com/watch?v=jkl012",
        transcript:
          "–ü–æ–ª–Ω–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É—Ä–æ–∫–∞ –ø–æ —Ç–µ–º–µ '1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è'",
        isPublished: true,
        viewCount: 52,
        averageRating: 4.6,
        totalFeedback: 8,
        teacherId: teachers[0].id,
        groupId: groups[1].id, // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825
        topicId: topics[24].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è" from intensive course
        nextTopicId: topics[25].id, // "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã" - next topic
        lessonType: "GROUP",
        status: "COMPLETED",
      },
    }),

    // –ì—Ä—É–ø–ø–∞ 20020925 - Completed lessons showing progress
    prisma.lesson.create({
      data: {
        title: "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è",
        description: "–ò–∑—É—á–∏–ª–∏ –∏—Å–ø–∞–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç, –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è",
        date: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000), // 12 days ago
        startTime: "18:00",
        endTime: "20:00",
        duration: 120,
        isActive: true,
        youtubeLink: "https://youtube.com/watch?v=mno345",
        transcript:
          "–ü–æ–ª–Ω–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É—Ä–æ–∫–∞ –ø–æ —Ç–µ–º–µ '1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è'",
        isPublished: true,
        viewCount: 48,
        averageRating: 4.8,
        totalFeedback: 7,
        teacherId: teachers[0].id,
        groupId: groups[6].id, // –ì—Ä—É–ø–ø–∞ 20020925
        topicId: topics[0].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è" from group course
        nextTopicId: topics[1].id, // "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã" - next topic
        lessonType: "GROUP",
        status: "COMPLETED",
      },
    }),
  ]);

  console.log(
    "‚úÖ Completed lessons with next topics created:",
    completedLessons.length,
  );

  // Create feedback for completed lessons
  console.log("Creating feedback for completed lessons...");
  const completedLessonFeedbacks = await Promise.all([
    // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925 - Feedback for completed lessons
    prisma.lessonFeedback.create({
      data: {
        rating: 5,
        comment: "–ê–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è - –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ!",
        isAnonymous: false,
        studentId: students[0].id, // Elena Garcia
        lessonId: completedLessons[0].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è"
      },
    }),
    prisma.lessonFeedback.create({
      data: {
        rating: 4,
        comment: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Ü–∏—Ñ—Ä—ã - –ø–æ–Ω—è—Ç–Ω–æ –æ–±—ä—è—Å–Ω–∏–ª–∏.",
        isAnonymous: false,
        studentId: students[4].id, // Maria Ivanova
        lessonId: completedLessons[1].id, // "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã"
      },
    }),
    prisma.lessonFeedback.create({
      data: {
        rating: 5,
        comment: "Ser –∏ estar - —Ç–µ–ø–µ—Ä—å –≤—Å–µ —è—Å–Ω–æ!",
        isAnonymous: false,
        studentId: students[0].id, // Elena Garcia
        lessonId: completedLessons[2].id, // "1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è"
      },
    }),

    // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825 - Feedback for completed lessons
    prisma.lessonFeedback.create({
      data: {
        rating: 4,
        comment: "–ê–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è - —Ö–æ—Ä–æ—à–∞—è –æ—Å–Ω–æ–≤–∞.",
        isAnonymous: false,
        studentId: students[1].id, // Mikhail Petrov
        lessonId: completedLessons[3].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è"
      },
    }),

    // –ì—Ä—É–ø–ø–∞ 20020925 - Feedback for completed lessons
    prisma.lessonFeedback.create({
      data: {
        rating: 5,
        comment: "–ê–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è - –æ—Ç–ª–∏—á–Ω—ã–π —É—Ä–æ–∫!",
        isAnonymous: false,
        studentId: students[2].id, // Anna Sidorova
        lessonId: completedLessons[4].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è"
      },
    }),
  ]);

  console.log(
    "‚úÖ Feedback for completed lessons created:",
    completedLessonFeedbacks.length,
  );

  // Create attendance records for completed lessons
  console.log("Creating attendance for completed lessons...");
  const completedLessonAttendance = await Promise.all([
    // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925 - Attendance for completed lessons
    prisma.lessonAttendance.create({
      data: {
        lessonId: completedLessons[0].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è"
        studentId: students[0].id, // Elena Garcia
        status: "PRESENT",
        notes: "–ê–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∞ –≤ —É—Ä–æ–∫–µ",
      },
    }),
    prisma.lessonAttendance.create({
      data: {
        lessonId: completedLessons[0].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è"
        studentId: students[4].id, // Maria Ivanova
        status: "PRESENT",
        notes: "–•–æ—Ä–æ—à–æ —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å —Å –∑–∞–¥–∞–Ω–∏—è–º–∏",
      },
    }),
    prisma.lessonAttendance.create({
      data: {
        lessonId: completedLessons[1].id, // "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã"
        studentId: students[0].id, // Elena Garcia
        status: "PRESENT",
        notes: "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ª–µ–∫—Å–∏–∫–æ–π",
      },
    }),
    prisma.lessonAttendance.create({
      data: {
        lessonId: completedLessons[1].id, // "1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã"
        studentId: students[4].id, // Maria Ivanova
        status: "PRESENT",
        notes: "–•–æ—Ä–æ—à–æ —É—Å–≤–æ–∏–ª–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É",
      },
    }),

    // –ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825 - Attendance for completed lessons
    prisma.lessonAttendance.create({
      data: {
        lessonId: completedLessons[3].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è"
        studentId: students[1].id, // Mikhail Petrov
        status: "PRESENT",
        notes: "–û—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ–º",
      },
    }),

    // –ì—Ä—É–ø–ø–∞ 20020925 - Attendance for completed lessons
    prisma.lessonAttendance.create({
      data: {
        lessonId: completedLessons[4].id, // "1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è"
        studentId: students[2].id, // Anna Sidorova
        status: "PRESENT",
        notes: "–•–æ—Ä–æ—à–æ —É—Å–≤–æ–∏–ª–∞ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è",
      },
    }),
  ]);

  console.log(
    "‚úÖ Attendance for completed lessons created:",
    completedLessonAttendance.length,
  );

  console.log("üéâ Database seeding completed successfully!");

  console.log("\nüìã Test Accounts:");
  console.log("Admin Email:", admin.email);
  console.log("Teacher 1 Email:", teachers[0].email);
  console.log("Teacher 2 Email:", teachers[1].email);
  console.log("Teacher 3 Email:", teachers[2].email);
  console.log("Password: password123");

  console.log("\nüìö Courses Available:");
  console.log("- –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –≤ –≥—Ä—É–ø–ø–µ (24 topics)");
  console.log("- –ò–Ω—Ç–µ–Ω—Å–∏–≤ —Å –Ω—É–ª—è –¥–æ A2 (24 topics)");
  console.log("- –ò—Å–ø–∞–Ω—Å–∫–∏–π —Å –Ω—É–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ (24 topics)");

  console.log("\nüë• Groups Created:");
  console.log(
    "- 6 –ò–Ω—Ç–µ–Ω—Å–∏–≤ groups (–ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925, –ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825, etc.)",
  );
  console.log(
    "- 3 –ì—Ä—É–ø–ø–∞ groups (–ì—Ä—É–ø–ø–∞ 20020925, –ì—Ä—É–ø–ø–∞ 10100925, –ì—Ä—É–ø–ø–∞ 10050825)",
  );

  console.log("\nüìä Progress Tracking Demo:");
  console.log("- –ò–Ω—Ç–µ–Ω—Å–∏–≤ 10010925: 3/24 topics completed (12.5% progress)");
  console.log("  ‚Ä¢ Last studied: '1–°: —è–≤–ª—è—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è'");
  console.log("  ‚Ä¢ Next topic: '1D: –∞—Ä—Ç–∏–∫–ª—å, —Ä–æ–¥ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ'");
  console.log("- –ò–Ω—Ç–µ–Ω—Å–∏–≤ 19210825: 1/24 topics completed (4.2% progress)");
  console.log("  ‚Ä¢ Last studied: '1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è'");
  console.log("  ‚Ä¢ Next topic: '1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã'");
  console.log("- –ì—Ä—É–ø–ø–∞ 20020925: 1/24 topics completed (4.2% progress)");
  console.log("  ‚Ä¢ Last studied: '1–ê: –∞–ª—Ñ–∞–≤–∏—Ç –∏ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è'");
  console.log("  ‚Ä¢ Next topic: '1B: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–∏—Ñ—Ä—ã'");

  console.log("\nüéØ What You'll See:");
  console.log("‚Ä¢ Course cards showing real progress percentages");
  console.log("‚Ä¢ '–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫' displaying actual topic names");
  console.log("‚Ä¢ '–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç–µ–º–∞' showing recently completed topics");
  console.log("‚Ä¢ Progress bars reflecting real topic completion");
  console.log("‚Ä¢ All groups using real school naming convention");
  console.log("‚Ä¢ Consistent topic structure across all courses");
}

main()
  .catch((e) => {
    console.error("‚ùå Error during seeding:", e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
